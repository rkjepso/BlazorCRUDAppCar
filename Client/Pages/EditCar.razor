@page "/editperson/{Id}"


@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

@inherits BasePage;

<MyStyle></MyStyle>



<h2>Edit Car</h2>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Brand"> Brand *</label>
            <input form="Brand" class="form-control" @bind="@car.Brand" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Model"> Model *</label>
            <input form="Model" class="form-control" @bind="@car.Model" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Year"> Year </label>
            <input form="Year" class="form-control" @bind="@car.Year" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Price"> Price </label>
            <input form="mobileNo" class="form-control" @bind="@car.Price" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
            <input type="button" class="btn" @onclick="@base.Cancel" value="Back" />
        </div>
    </div>
</div>

<Message Error=@base.Error StrInfo=@StrInfo> </Message>

@code {
    [Parameter]
    public string Id { get; set; } = "";
    CarViewModel car = new CarViewModel();
    protected override async Task OnInitializedAsync()
    {
        car = await API.GetPersonById(Id);
    }
    protected async Task Save()
    {
        bool b = await API.UpdateCar(car);
        if (b)
            await base.OnOk("Updated successfully");
        else 
            await base.OnError("Save Failed !!");

  
    }


}
