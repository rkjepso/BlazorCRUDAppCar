@page "/carlist"

@inject HttpClient _httpClient
@*@inject IWebService WebService
@inject IServiceLocal WebServiceLocal*@
@inherits   BasePage
<MyStyle></MyStyle>

<h1>Cars - complete CRUD example</h1>
<p>@(ProgramExt.IsLocalDb ? "Local Storage" : "Server DB")</p>
<button @onclick="OnChangeDb">Switch to @(ProgramExt.IsLocalDb ? "Server" : "Local")</button>
<div>
    <a href="/AddCar">Add New Car</a>
    @if (carlist != null)
    {
        <table class="table-bordered">
            <thead>
                <tr>
                    <th width = "10%">Id</th>
                    <th width = "15%">Brand</th>
                    <th width = "15%">Model</th>
                    <th width = "15%">Year</th>
                    <th width = "15%">Price</th>
                    <th width = "30%">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in carlist)
                {
                    <tr>
                    <td>@p.Id</td>
                    <td>@p.Brand</td>
                    <td> @p.Model</td>
                    <td>@p.Year</td>
                    <td>@p.Price</td>
                    <td>
                        @if(MayEdit(p))
                        {
                            <a href="/editperson/@p.Id">Edit</a> 
                            <a href="/DeleteCar/@p.Id">Delete</a>
                        }
          
                    </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<Message StrInfo=@StrLoad></Message>
@code {
    public string StrLoad { get; set; } = "";
    List<CarViewModel> carlist = new ();

    private bool MayEdit(CarViewModel car)
    {
        if (!ProgramExt.IsLocalDb)
            return true;
        return car.Id >= IWebService.ID_LOCAL;
    }

    protected override async Task OnInitializedAsync()
    {
       await  OnLoad();
    }

    protected async Task OnLoad()
    {
        StrLoad = "Loading persons .... ";
        carlist = await base.API.GetAllCars();

        StrLoad = $"{carlist.Count} records loaded";
    }

    async Task OnChangeDb()
    {      
        ProgramExt.IsLocalDb = !ProgramExt.IsLocalDb;
        await base.API.Sync(carlist);
        await OnLoad();
    }
}
