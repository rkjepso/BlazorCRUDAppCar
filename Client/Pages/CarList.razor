@page "/carlist"
@inherits   BasePage
<MyStyle></MyStyle>
<style>
    h3 {display:inline;width:100px;color:red;}

    .btn {
        position:absolute;
        right:10px;
    }
</style>


<div >
    <h3>@(ProgramExt.IsLocalDb ? "Local Storage" : "Server Database")</h3>
    <button class="btn btn-primary" @onclick="OnDeleteAll">Delete All</button>
@*    <button class="btn btn-primary" @onclick="OnChangeDb">Switch DB</button>*@

</div>

<br />
<a href="/AddCar">Add New Car</a>
<div>
    <table class="table-bordered">
        <thead>
            <tr>
                <th width = "10%">Id</th>
                <th width = "15%">Photo</th>
                <th width = "10%">Brand</th>
                <th width = "10%">Model</th>
                <th width = "10%">Year</th>
                <th width = "15%">Price</th>
                <th width = "25%">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in carlist ??= new List<CarViewModel>())
            {
                <tr>
                <td>@p.Id</td>
                <td>
                    <img class="imgSmall" src=@(GetImage(p))/> 
                </td>
                <td>@p.Brand</td>
                <td> @p.Model</td>
                <td>@p.Year</td>
                <td style=@StyleNumber>@ToNumber(@p.Price)</td>
                <td>
                    @if(MayEdit(p))
                    {
                        <a href="/editperson/@p.Id">Edit</a> 
                        <a href="/DeleteCar/@p.Id">Delete</a>
                    }      
                </td>
                </tr>
            }
        </tbody>
    </table>

<Message StrInfo=@StrLoad></Message>
</div>


@code {
    public string StrLoad { get; set; } = "";
    List<CarViewModel> carlist = new ();
    private static string ToNumber(int n) => string.Format("{0,10:#,##}", n);
    private string StyleNumber => "text-align:right";

    private string GetImage(CarViewModel car)
    {
        string img = CarViewModel.GetImg(car);
        return img;
    }

    private bool MayEdit(CarViewModel car)
    {
        if (!ProgramExt.IsLocalDb)
            return true;
        return car.Id >= IWebService.ID_LOCAL;
    }

    protected override async Task OnInitializedAsync()
    {
        await  OnLoad();
    }

    protected async Task OnLoad()
    {
        StrLoad = "Loading persons .... ";
        carlist = await base.API.GetAllCars();   
        StrLoad = $"{carlist.Count} records loaded";
    }

    async Task OnChangeDb()
    {      
        ProgramExt.IsLocalDb = !ProgramExt.IsLocalDb;
        //await base.API.Sync(carlist);
        //await OnLoad();
    }

    async Task OnDeleteAll()
    {
        foreach (var car in carlist)
            await API.DeleteById(car.Id.ToString());

        carlist = await base.API.GetAllCars();   
        StateHasChanged();
    }
}


@*<button @onclick="OnDummy">@StrDummy</button>
@code {
    public string StrDummy { get; set; } = "Press Me";
    void OnDummy() { StrDummy = StrDummy + 'X'; }
}*@

