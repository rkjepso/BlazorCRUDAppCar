@page "/AddCar"


@*@inject HttpClient Http*@
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

@inherits BasePage

<MyStyle></MyStyle>
<style>
    .label, .form-control, .button {
        display:inline;
        margin : 5px 0px 5px 5px;
        width : 200px;
    }
    .row {
        border:1px dotted black;
        margin: 5px 0px;
        width:max(500px);
    }

</style>

<h2>Add Car</h2>
<div class="row" style="background-color:lightcyan;">

    <label for="Brand" class="button"> Brand *</label>
    <input form="Brand" class="button" @bind="@car.Brand" />

    <label for="Model" class="button"> Model *</label>
    <input form="Model" class="button" @bind="@car.Model" />

    <label for="Model" class="button">  Year</label>
    <input form="Model" class="button"@bind="@car.Year" />

    <label for="Price" class="button">  Price</label>
    <input form="Price" class="button"@bind="@car.Price" />

</div>
<div class="row">
    <button class="button" @onclick="@Save">Save</button>
    <button class="button" @onclick="@base.Cancel">Back</button>
</div>


<Message Error=@base.Error StrInfo=@base.StrInfo></Message>

@code {
    CarViewModel car = new CarViewModel();
    string [] f = {"Volvo", "Volvo", "Ferrari", "Porche", "Jaguar"};
    string [] l = {"Amazon", "PV", "512", "911", "EType"};
    (int, int)[] yr = { (1965, 1970), (1949, 1965), (1980, 1990), (1950,2011), (1965, 1970) };
    (int, int)[] p = { (100000, 200000), (20000, 250000), (700000,3000000), (500000,3500000), (400000,2000000) };

    Random r = new ();
    protected override async Task OnInitializedAsync()
    {
        int i = r.Next(0, f.Length);
        car.Brand = f[i];
        car.Model = l[i];
        car.Year  = r.Next(yr[i].Item1, yr[i].Item2).ToString();
        car.Price = r.Next(p[i].Item1, p[i].Item2).ToString();
  
        await Task.Delay(1); 
    }
    protected async Task Save()
    {
        var personResponse = await API.Add(car);
        if (personResponse?.Id > 0)
            await base.OnOk("Save Successfully");
        else
            await base.OnError("Save Failed !!");
    }


}
